version: '2.1'
services:
  backend:
    build: .
    env_file:
      - ./extras_app.env
    expose:
      - "8000"
    links:
      - db:db
      - redis:redis
    volumes:
      - ./static:/code/static
      - ./media:/code/media
      - ./logs:/var/log/balance_app
    depends_on:
      - redis
      - db
    restart: unless-stopped

  celery:
    build: .
    env_file:
      - ./extras_app.env
    environment:
      - DJANGO_CONFIGURATION=Prod
    links:
      - db:db
      - redis:redis
    volumes:
      - ./static:/code/static
      - ./media:/code/media
    depends_on:
      - redis
      - db
    restart: unless-stopped
    command: bash -c "mkdir -p /var/log/balance_app && \
      touch /var/log/balance_app/app.log && sleep 30 &&  \
      /venv/bin/celery -A core worker -l INFO"

  redis:
    image: redis:latest
    restart: unless-stopped

  db:
    image: postgres:latest
    env_file:
      - ./extras_db.env
    expose:
      - "5432"
    restart: unless-stopped
    volumes:
      - ./database:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports: 
      - "8000:80"
  #  expose:
  #    - "80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./static:/code/static
      - ./media:/code/media
    depends_on:
      - backend
    env_file:
      - ./extras_nginx.env
    restart: unless-stopped

  #nginx_proxy:
  #  image: jwilder/nginx-proxy
  #  ports: 
  #    - "8000:80"
  #    - "8001:443"
  #  volumes:
  #    - /var/run/docker.sock:/tmp/docker.sock:ro
  #    - ./nginx/certs:/etc/nginx/certs:ro
  #    - /etc/nginx/vhost.d
  #    - /usr/share/nginx/html
  #  labels:
  #    - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
  #  restart: unless-stopped

  #letsencrypt:
  #  image: jrcs/letsencrypt-nginx-proxy-companion
  #  volumes:
  #    - ./nginx/certs:/etc/nginx/certs:rw
  #    - /var/run/docker.sock:/var/run/docker.sock:ro
  #  volumes_from:
  #    - nginx_proxy:rw
  #  restart: unless-stopped